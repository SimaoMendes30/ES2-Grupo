@using Frontend.DTOs.Projetos
@inject Frontend.Services.ProjetoService ProjetoService

<MudDialog FullWidth MaxWidth="MaxWidth.Medium" @bind-IsVisible="_open">
    <DialogContent>
        <MudTextField Label="Nome" @bind-Value="Projeto.Nome" FullWidth />
        <MudTextField Label="Cliente" @bind-Value="Projeto.NomeCliente" FullWidth />
        <MudTextField Label="Descrição" @bind-Value="Projeto.Descricao" FullWidth />
        <MudTextField Label="Preço/hora" @bind-Value="Projeto.PrecoHora" FullWidth Variant="Variant.Text" Adornment="Adornment.End" AdornmentText="€" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Save">Guardar</MudButton>
        <MudButton OnClick="Close">Cancelar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public ProjetoDto Projeto { get; set; } = new();
    [Parameter] public EventCallback OnSaved { get; set; }

    private bool _open;

    public void Open() => _open = true;
    private void Close() => _open = false;

    private async Task Save()
    {
        var dto = new UpdateProjetoDto(Projeto.Nome, Projeto.NomeCliente, Projeto.Descricao, Projeto.PrecoHora);
        await ProjetoService.UpdateAsync(Projeto.IdProjeto, dto);
        await OnSaved.InvokeAsync();
        Close();
    }
}