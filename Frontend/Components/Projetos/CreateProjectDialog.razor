@using MudBlazor
@using System.ComponentModel.DataAnnotations
@using System.Net
@using Frontend.Services
@using Frontend.DTOs.Project
@using Microsoft.AspNetCore.Components.Forms
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <EditForm EditContext="@editContext">
            <DataAnnotationsValidator />

            <MudStack Spacing="2">
                <MudTextField T="string"
                              Label="Nome"
                              Variant="Variant.Outlined"
                              @bind-Value="Projeto.Nome"
                              Required="true"
                              FullWidth="true" />

                <MudTextField T="string"
                              Label="Nome do Cliente"
                              Variant="Variant.Outlined"
                              @bind-Value="Projeto.NomeCliente"
                              Required="true"
                              FullWidth="true" />

                <MudTextField T="string"
                              Label="Descrição"
                              Variant="Variant.Outlined"
                              @bind-Value="Projeto.Descricao"
                              TextArea="true"
                              Lines="3"
                              FullWidth="true" />

                <MudNumericField T="decimal?"
                                 Label="Preço/Hora (€)"
                                 Variant="Variant.Outlined"
                                 @bind-Value="Projeto.PrecoHora"
                                 Min="0"
                                 DecimalPlaces="2"
                                 FullWidth="true" />
            </MudStack>

            <ValidationSummary />
        </EditForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="@Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" OnClick="@Submit">Criar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; } = default!;
    [Inject] private ProjectService ProjetoService { get; set; } = default!;

    private ProjectCreateDto Projeto { get; set; } = new();
    private EditContext editContext = default!;

    protected override void OnInitialized()
    {
        editContext = new EditContext(Projeto);
    }

    private async Task Submit()
    {
        if (editContext.Validate())
        {
            try
            {
                var criado = await ProjetoService.CreateAsync(Projeto);
                MudDialog.Close(DialogResult.Ok(criado));
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao criar projeto: {ex.Message}", Severity.Error);
            }
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
