@page "/create-account"
@layout SubMainLayout
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject UserService UserService

@using Frontend.DTOs.User
@using Frontend.Services

<PageTitle>Criar Conta</PageTitle>

<div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
    <MudPaper Elevation="10" Class="pa-8" Style="flex-grow: 1; min-width: 800px; max-width: 90%; background-color: rgba(255,255,255,0.8); backdrop-filter: blur(10px);">
        <MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudItem xs="12" md="4">
                <MudContainer>
                    <div class="text-start mb-6">
                        <MudLink Href="/" Underline="Underline.None">
                            <MudImage Src="images/helpmate-logo2.png" Width="200" Height="60" Alt="Logótipo Help Mate" Class="rounded-lg mb-4"/>
                        </MudLink>
                        <div style="height: 30px;"></div>
                        <MudText Typo="Typo.h5" Class="mb-2 font-weight-bold" Style="font-size: 1.5rem;" Color="Color.Primary">Criar Conta</MudText>
                        <div style="height: 10px;"></div>
                        <MudText Typo="Typo.body2" Color="Color.Dark">Crie uma conta para poder usufruir dos nossos serviços gratuitamente</MudText>
                    </div>
                </MudContainer>
            </MudItem>
            <MudItem xs="12" md="1" class="d-flex justify-center">
                <MudDivider Vertical="true" />
            </MudItem>
            <MudItem xs="12" md="7">
                <MudContainer>
                    <EditForm Model="@_utilizadorDto" OnValidSubmit="@HandleRegister">
                        <DataAnnotationsValidator/>

                        <MudTextField @bind-Value="_utilizadorDto.Nome"
                                      Label="Nome"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      Required="true"
                                      AdornmentIcon="@Icons.Material.Filled.Person"
                                      Class="mb-4"/>

                        <MudTextField @bind-Value="_utilizadorDto.Username"
                                      Label="Username"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      Required="true"
                                      AdornmentIcon="@Icons.Material.Filled.AccountCircle"
                                      Class="mb-4"/>

                        <MudTextField @bind-Value="_utilizadorDto.Password"
                                      Label="Password"
                                      Variant="Variant.Outlined"
                                      FullWidth="true"
                                      Required="true"
                                      InputType="InputType.Password"
                                      AdornmentIcon="@Icons.Material.Filled.Lock"
                                      Class="mb-4"/>

                        <MudSelect T="int"
                                   Label="Tipo de Utilizador"
                                   Variant="Variant.Outlined"
                                   @bind-Value="_tipoSelecionado"
                                   AnchorOrigin="Origin.BottomCenter"
                                   FullWidth="true"
                                   Required="true"
                                   Class="mb-4"
                                   InputStyle="border-radius: 8px;">
                            <MudSelectItem Value="0">Utilizador Normal</MudSelectItem>
                            <MudSelectItem Value="1">Super Utilizador</MudSelectItem>
                            <MudSelectItem Value="2">Administrador</MudSelectItem>
                        </MudSelect>

                        <MudButton
                            ButtonType="ButtonType.Submit"
                            Variant="Variant.Filled"
                            Color="Color.Primary"
                            FullWidth="true"
                            Size="Size.Large"
                            Class="mb-4 mud-button-hover-scale"
                            Disabled="@_isProcessing"
                            EndIcon="@(!_isProcessing ? Icons.Material.Filled.ArrowForward : null)">
                            @if (_isProcessing)
                            {
                                <MudProgressCircular Size="Size.Small" Color="Color.Default" Class="mr-2" />
                                <span>A processar...</span>
                            }
                            else
                            {
                                <span>Criar Conta</span>
                            }
                        </MudButton>

                        @if (!string.IsNullOrEmpty(_errorMessage))
                        {
                            <MudAlert Severity="Severity.Error" Class="mb-4">@_errorMessage</MudAlert>
                        }
                    </EditForm>

                    <MudDivider Class="my-4"/>

                    <div class="text-center">
                        <MudText Typo="Typo.body2" Class="mr-2">Já tem conta?</MudText>
                        <NavLink href="/login" Match="NavLinkMatch.All" class="text-decoration-none">
                            <MudButton Variant="Variant.Text"
                                       Color="Color.Primary"
                                       EndIcon="@Icons.Material.Filled.Key">
                                Iniciar Sessão
                            </MudButton>
                        </NavLink>
                    </div>
                </MudContainer>
            </MudItem>
        </MudGrid>
    </MudPaper>
</div>

@code {
    private UserCreateDto _utilizadorDto = new();
    private int _tipoSelecionado;
    private string _errorMessage = string.Empty;
    private bool _isProcessing;

    private async Task HandleRegister()
    {
        if (_isProcessing) return;

        _isProcessing = true;
        _errorMessage = string.Empty;
        StateHasChanged();

        _utilizadorDto.SuperUser = _tipoSelecionado == 1;
        _utilizadorDto.Admin = _tipoSelecionado == 2;

        try
        {
            var user = await UserService.CreateAsync(_utilizadorDto);
            await JSRuntime.InvokeVoidAsync("alert", "Conta criada com sucesso!");
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            _errorMessage = $"Erro ao criar conta: {ex.Message}";
        }
        finally
        {
            _isProcessing = false;
            StateHasChanged();
        }
    }
}